buildscript {
	ext {
		queryDslVersion = "5.0.0"  // QueryDSL 버전
	}
}

plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)  // Java 17을 사용
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// QueryDSL 설정 (jakarta로 변경)
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"

	// annotationProcessor 설정
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"

	// javax.annotation.Generated 대응 코드
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"

	// javax.persistence.Entity 대응 코드
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Spring Boot 의존성들
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'
	implementation 'org.modelmapper:modelmapper:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'net.coobird:thumbnailator:0.4.16'
}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL QClass 생성 위치 설정
def generated = 'build/generated/sources/annotationProcessor/java/main'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += ["$projectDir/src/main/java", "$projectDir/$generated"]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}
